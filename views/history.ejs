<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Transaction History</title>
  <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.2/css/all.css">
 <!-- Favicon -->
 <link href="/images/ban-invest.png" rel="icon">
 
  <style>

    @media only screen and (max-width: 594px) and (max-height: 1200px) {
      main{
        max-width: 80% !important;
      }    
      .sidebar.collapsed .menu-icon {
              display: none;
           }
      
      body {
            flex-direction: column;
            padding: 20px;
          }
    
          .container {
            padding: 20px 10px;
          }
    
          h1, h2 {
            font-size: 1.2rem;
          }
    
          th, td {
            padding: 10px 5px;
            font-size: 14px;
          }
    
          .controls {
            flex-direction: column;
            align-items: center;
          }
    
          .pagination {
            flex-direction: column;
            gap: 5px;
          }
    
          
        }
        body {
          background-image: linear-gradient(to right, rgba(26, 0, 142, 0.658), rgba(129, 0, 0, 0.5)),url(../images/invest.jpg);
        background-size: cover; /* Ensures the background covers the entire page */
        height: auto; /* Ensures the body takes the full height of the viewport */
        background-repeat: no-repeat;
        margin: 0; /* Remove default margin */
        padding: 50px 0; /* Remove default padding */
          font-family: 'Segoe UI', sans-serif;
          display: flex;
          justify-content: center;
          align-items: center;
          min-height: 100vh;
          margin: 0;
          padding: 20px;
        }
    
        .container {
          background-color: #ffffff;
          padding: 30px 20px;
          border-radius: 20px;
          box-shadow: 0 8px 16px rgba(0,0,0,0.1);
          width: 100%;          /* ✅ keep this */
          max-width: 800px;      /* ✅ optional: tailwind handles it */
          text-align: center;
        }
    
        h1 {
          margin-bottom: 20px;
          color: #333;
        }
    
        section {
          margin-top: 30px;
        }
    
        h2 {
          margin-bottom: 10px;
          color: #444;
        }
    
        .filter-select {
          padding: 8px 10px;
          border-radius: 8px;
          border: 1px solid #ccc;
          margin-bottom: 10px;
        }
    
        .table-wrapper {
          overflow-x: auto;
        }
    
        table {
          width: 100%;
          border-collapse: collapse;
          margin-top: 10px;
        }
    
        th, td {
          border: 1px solid #ccc;
          padding: 12px 10px;
          text-align: center;
        }
    
        th {
          background-color: #e8efff;
        }
    
        tr:nth-child(even) {
          background-color: #f9f9f9;
        }
    
        .status-approved { color: green; font-weight: bold; }
        .status-pending { color: orange; font-weight: bold; }
        .status-rejected { color: red; font-weight: bold; }
    
        .back-link {
          display: inline-block;
          margin-top: 30px;
          text-decoration: none;
          color: #4a90e2;
          font-weight: bold;
        }
    
        .back-link:hover {
          text-decoration: underline;
        }
    
        .summary {
          margin-top: 10px;
          font-weight: bold;
          color: #333;
        }
    
        .controls {
          display: flex;
          justify-content: space-between;
          flex-wrap: wrap;
          margin-bottom: 10px;
          gap: 10px;
        }
    
        .buttons {
          background-color: #4a90e2;
          color: #fff;
          border: none;
          padding: 8px 12px;
          border-radius: 8px;
          cursor: pointer;
        }
    
        .buttons:hover {
          background-color: #3a78c2;
        }
    
        .pagination {
          margin-top: 10px;
        }
    
        .pagination button {
          margin: 0 4px;
          padding: 5px 10px;
          border-radius: 6px;
          border: 1px solid #ccc;
          cursor: pointer;
        }
    
        .pagination button.active {
          background-color: #4a90e2;
          color: white;
        }
    
        @media screen and (max-width: 600px) {
          .container {
            padding: 20px 10px;
          }
    
          .controls {
            flex-direction: column;
            align-items: center;
          }
    
          th, td {
            padding: 10px 5px;
            font-size: 14px;
          }
        }
      </style>
</head>
<body class="min-h-screen bg-cover bg-no-repeat px-4 py-8"
      style="background-image: linear-gradient(to right, rgba(26, 0, 142, 0.658), rgba(129, 0, 0, 0.5)), url('../images/invest.jpg');">

      <%- include('partials/navbar', {walletAddress,coinType}) %>

       <!-- Top Right Icon -->
<div style="position: absolute; top: 25px; right: 20px; z-index: 1000;">
  <a href="/" title="Settings" class="text-light fs-4">
    <i class="fas fa-home text-xl w-6 text-center menu-icon"></i>
  </a>
</div>

 <main class="w-full max-w-4xl bg-white rounded-2xl shadow-xl px-4 sm:px-6 md:px-10 py-6 md:py-10 mt-10 mx-auto">
  <h1 class="text-2xl md:text-3xl font-bold text-center mb-6 text-gray-800">Transaction History</h1>

    <!-- DEPOSIT SECTION -->
    <section class="mb-12">
      <h2 class="text-xl font-semibold text-gray-700 mb-4">Deposit History</h2>
      <div class="flex flex-col sm:flex-row justify-between items-center gap-4 mb-4">
        <select class="filter-select border border-gray-300 rounded-md px-3 py-2 w-full sm:w-auto" id="depositFilter" onchange="filterRows('deposit')">
          <option value="all">All</option>
          <option value="approved">Approved</option>
          <option value="pending">Pending</option>
          <option value="rejected">Rejected</option>
        </select>
        <button class="btn bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md" onclick="exportTableAsPDF('depositTable', 'Deposits')">
          Export PDF
        </button>
      </div>

      <div class="overflow-x-auto">
        <table class="w-full min-w-[600px] text-sm text-center border border-gray-200" id="depositTable">
          <thead class="bg-blue-100">
            <tr>
              <th class="p-3">Date</th>
              <th class="p-3">Amount</th>
              <th class="p-3">Status</th>
            </tr>
          </thead>
          <tbody id="depositBody" class="bg-white divide-y divide-gray-100">
            <% if (deposits.length > 0) { %>
              <% deposits.forEach(d => { %>
                <tr data-status="<%= d.status.trim().toLowerCase() %>">
                  <td class="p-3"><%= new Date(d.created_at).toLocaleString() %></td>
                  <td class="p-3 amount">$<%= parseFloat(d.amount).toFixed(2) %></td>
                  <td class="p-3 font-semibold status-<%= d.status.trim().toLowerCase() %>">
                    <% if (d.status.trim().toLowerCase() === 'approved') { %> ✅ Approved
                    <% } else if (d.status.trim().toLowerCase() === 'pending') { %> ⏳ Pending
                    <% } else { %> ❌ Rejected <% } %>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr><td colspan="3" class="p-3">No deposit history found.</td></tr>
            <% } %>
          </tbody>
        </table>
      </div>
      <div class="summary text-gray-700 mt-4 font-medium" id="depositTotal"></div>
      <div class="pagination mt-3 flex flex-wrap gap-2 justify-center" id="depositPagination"></div>
    </section>

    <!-- WITHDRAWAL SECTION -->
    <section>
      <h2 class="text-xl font-semibold text-gray-700 mb-4">Withdrawal History</h2>
      <div class="flex flex-col sm:flex-row justify-between items-center gap-4 mb-4">
        <select class="filter-select border border-gray-300 rounded-md px-3 py-2 w-full sm:w-auto" id="withdrawalFilter" onchange="filterRows('withdrawal')">
          <option value="all">All</option>
          <option value="approved">Approved</option>
          <option value="pending">Pending</option>
          <option value="rejected">Rejected</option>
        </select>
        <button class="btn bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md" onclick="exportTableAsPDF('withdrawalTable', 'Withdrawals')">
          Export PDF
        </button>
      </div>

      <div class="overflow-x-auto">
        <table class="w-full min-w-[600px] text-sm text-center border border-gray-200" id="withdrawalTable">
          <thead class="bg-blue-100">
            <tr>
              <th class="p-3">Date</th>
              <th class="p-3">Amount</th>
              <th class="p-3">Status</th>
            </tr>
          </thead>
          <tbody id="withdrawalBody" class="bg-white divide-y divide-gray-100">
            <% if (withdrawals.length > 0) { %>
              <% withdrawals.forEach(w => { %>
                <tr data-status="<%= w.status.trim().toLowerCase() %>">
                  <td class="p-3"><%= new Date(w.created_at).toLocaleString() %></td>
                  <td class="p-3 amount">$<%= parseFloat(w.amount).toFixed(2) %></td>
                  <td class="p-3 font-semibold status-<%= w.status.trim().toLowerCase() %>">
                    <% if (w.status.trim().toLowerCase() === 'approved') { %> ✅ Approved
                    <% } else if (w.status.trim().toLowerCase() === 'pending') { %> ⏳ Pending
                    <% } else { %> ❌ Rejected <% } %>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr><td colspan="3" class="p-3">No withdrawal history found.</td></tr>
            <% } %>
          </tbody>
        </table>
      </div>
      <div class="summary text-gray-700 mt-4 font-medium" id="withdrawalTotal"></div>
      <div class="pagination mt-3 flex flex-wrap gap-2 justify-center" id="withdrawalPagination"></div>
    </section>

    <div class="mt-8 text-center">
      <a href="/" class="text-blue-600 hover:underline font-semibold">← Back to Dashboard</a>
    </div>
  </main>
</body>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

  <script>
    const itemsPerPage = 5;

    function resetVisibility(tableId) {
      const table = document.getElementById(tableId);
      const rows = table.querySelectorAll('tbody tr');
      rows.forEach(row => row.style.display = '');
    }

    function paginate(tableId, paginationId) {
      const table = document.getElementById(tableId);
      const allRows = [...table.querySelectorAll('tbody tr')];
      const pagination = document.getElementById(paginationId);

      const visibleRows = allRows.filter(row => row.style.display !== 'none');
      const totalPages = Math.ceil(visibleRows.length / itemsPerPage);

      function showPage(page) {
        visibleRows.forEach((row, index) => {
          row.style.display = (index >= (page - 1) * itemsPerPage && index < page * itemsPerPage) ? '' : 'none';
        });

        pagination.innerHTML = '';
        for (let i = 1; i <= totalPages; i++) {
          const btn = document.createElement('button');
          btn.textContent = i;
          btn.classList.toggle('active', i === page);
          btn.onclick = () => showPage(i);
          pagination.appendChild(btn);
        }
      }

      showPage(1);
    }

    function calculateTotal(tableId, totalId) {
      const table = document.getElementById(tableId);
      const amounts = [...table.querySelectorAll('tbody .amount')]
        .filter(td => td.closest('tr').style.display !== 'none');

      let sum = 0;
      amounts.forEach(td => {
        const value = parseFloat(td.textContent.replace(/[^0-9.]/g, ''));
        if (!isNaN(value)) sum += value;
      });

      document.getElementById(totalId).textContent = `Total: $${sum.toFixed(2)}`;
    }

    function filterRows(type) {
      const filter = document.getElementById(type + 'Filter').value;
      const table = document.getElementById(type + 'Table');
      const rows = table.querySelectorAll('tbody tr');

      rows.forEach(row => {
        const status = row.getAttribute('data-status');
        row.style.display = (filter === 'all' || status === filter) ? '' : 'none';
      });

      calculateTotal(type + 'Table', type + 'Total');
      paginate(type + 'Table', type + 'Pagination');
    }



    
    const { jsPDF } = window.jspdf;

    function exportTableAsPDF(tableId, filename) {
  const doc = new jsPDF();
  const table = document.getElementById(tableId);
  const rows = table.querySelectorAll('tr');

  doc.setFont('helvetica', 'normal');
  const margin = 20;
  let y = margin;

  doc.setFontSize(16);
  doc.text('Transaction History - ' + filename, margin, y);
  y += 12;

  const date = new Date().toLocaleString();
  doc.setFontSize(10);
  doc.text('Date Generated: ' + date, margin, y);
  y += 12;

  const headers = ['Date', 'Amount', 'Status'];
  const columnWidth = [70, 40, 60];
  const rowHeight = 10;
  const pageHeight = doc.internal.pageSize.height;

  // Draw header background
  doc.setFillColor(255, 255, 255);
  for (let i = 0, x = margin; i < columnWidth.length; i++, x += columnWidth[i]) {
    doc.rect(x, y, columnWidth[i], rowHeight, 'F');
  }

  // Header text
  doc.setFont('helvetica', 'bold');
  doc.setTextColor(0, 0, 0);
  doc.text(headers[0], margin + 5, y + 7);
  doc.text(headers[1], margin + columnWidth[0] + 5, y + 7);
  doc.text(headers[2], margin + columnWidth[0] + columnWidth[1] + 5, y + 7);
  y += rowHeight;

  doc.setFont('helvetica', 'normal');

  rows.forEach((row, index) => {
    if (index === 0) return; // skip table <thead>

    const cells = row.querySelectorAll('td');
    if (cells.length === 0) return; // skip "no data" rows

    const rowData = [...cells].map(cell => cell.innerText.trim());

    // Handle page break
    if (y + rowHeight > pageHeight - 20) {
      doc.addPage();
      y = margin;

      // Redraw table headers on new page
      doc.setFont('helvetica', 'bold');
      doc.setFillColor(255, 255, 255);
      for (let i = 0, x = margin; i < columnWidth.length; i++, x += columnWidth[i]) {
        doc.rect(x, y, columnWidth[i], rowHeight, 'F');
      }

      doc.text(headers[0], margin + 5, y + 7);
      doc.text(headers[1], margin + columnWidth[0] + 5, y + 7);
      doc.text(headers[2], margin + columnWidth[0] + columnWidth[1] + 5, y + 7);
      y += rowHeight;
      doc.setFont('helvetica', 'normal');
    }

    // Draw row data
    doc.text(rowData[0], margin + 5, y + 7);
    doc.text(rowData[1], margin + columnWidth[0] + 5, y + 7);
    doc.text(rowData[2], margin + columnWidth[0] + columnWidth[1] + 5, y + 7);
    y += rowHeight;
  });
// Footer: Add Page Number
const pageCount = doc.internal.getNumberOfPages();
  doc.setFontSize(8);
  doc.setTextColor(150, 150, 150); // Grey color for footer text
  doc.text('Page ' + pageCount, margin, y);


  doc.save(`${filename}_history.pdf`);
}




    // Run on page load
    window.onload = () => {
      ['deposit', 'withdrawal'].forEach(type => {
        resetVisibility(type + 'Table');
        calculateTotal(type + 'Table', type + 'Total');
        paginate(type + 'Table', type + 'Pagination');
      });
    };
  </script>
</body>
</html>
